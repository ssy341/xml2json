{"dt-api":{"summary":"Destroy child row(s) for the selected parent row","description":"This method is used to remove child row(s) from a parent row, removing them from the displayed table (if they are currently displayed) and releasing the memory allocated for these rows.\r\n\r\n\t\tPlease note that this method is only available when `dt-api row().child()` is called with a parameter set. This is because `dt-api row().child()` will return the child rows if called with no parameters, which is either a `-type jQuery` object or `-type undefined`. When called with a parameter `dt-api row().child()` returns a `-type DataTables.Api` instance. If you need to display a child row without any parameters being set use `dt-api row().child.show()`.\r\n\r\n\t\tUnlike many of the other methods which manipulate the DataTable, this method does not require `dt-api draw()` to be called immediately after. The child row(s) are inserted into the table without requiring that DataTables redraw.","name":"row().child().remove()","example":{"content":"\r\nvar table = $('#example').DataTable();\r\n\r\n$('#example tbody').on('click', 'td.details-control', function () {\r\n\tvar tr = $(this).parents('tr');\r\n\tvar row = table.row( tr );\r\n\r\n\tif ( row.child.isShown() ) {\r\n\t\t// This row is already open - remove it\r\n\t\trow.child( false ).remove();\r\n\t\ttr.removeClass('shown');\r\n\t}\r\n\telse {\r\n\t\t// Open this row (the format() function would return the data to be shown)\r\n\t\trow.child( format(row.data()) ).show();\r\n\t\ttr.addClass('shown');\r\n\t}\r\n} );\r\n\r\n","title":"Show / hide a row based on its current state, adding the row content as needed."},"since":"1.10.1","type":{"description":"Remove child row(s) from display and release any allocated memory","returns":{"content":"DataTables API instance.","type":"DataTables.Api"},"type":"function","signature":"row().child().remove()"},"group":"rows"}}
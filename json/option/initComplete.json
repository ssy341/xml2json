{"dt-option":{"summary":"Initialisation complete callback.","description":"It can often be useful to know when your table has fully been initialised, data loaded and drawn, particularly when using an `dt-init ajax` data source. In such a case, the table will complete its initial run before the data has been loaded (Ajax is asynchronous after all!) so this callback is provided to let you know when the data is fully loaded.\r\n\r\n\t\tAdditionally the callback is passed in the JSON data received from the server when Ajax loading data, which can be useful for configuring components connected to your table, for example [Editor fields](//editor.datatables.net).","name":"initComplete","example":[{"content":"\r\n$('#example').dataTable( {\r\n  \"initComplete\": function(settings, json) {\r\n    alert( 'DataTables has finished its initialisation.' );\r\n  }\r\n} );\r\n","title":"Show an alert when the table has fully loaded"},{"content":"\r\n$('<div class=\"loading\">Loading<\/div>').appendTo('body');\r\n\r\n$('#example').dataTable( {\r\n  \"initComplete\": function( settings, json ) {\r\n    $('div.loading').remove();\r\n  }\r\n} );\r\n","title":"Show a loading message while the table is being initialised (`processing` will do this as well)"}],"since":"1.10","type":{"scope":"HTML table element","parameter":[{"content":"DataTables settings object","name":"settings","type":"DataTables.Settings"},{"content":"JSON data retrieved from the server if the `ajax` option was set. Otherwise `undefined`.","name":"json","type":"object"}],"type":"function","signature":"initComplete( settings, json )"},"group":"callback","related":[{"content":"ajax","type":"option"},{"content":"drawCallback","type":"option"},{"content":"init","type":"event"}]}}
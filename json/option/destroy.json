{"dt-option":{"summary":"Destroy any existing table matching the selector and replace with the new options.","default":{"value":false},"description":"Initialise a new DataTable as usual, but if there is an existing DataTable which matches the selector, it will be destroyed and replaced with the new table. This can be useful if you want to change a property of the table which cannot be altered through the API.\r\n\r\n\t\tNote that if you are not changing the configuration of the table, but just altering the data displayed by the table, it is far more efficient to use the `dt-api ajax.reload()` method (or `dt-api rows.add()` etc).","name":"destroy","example":{"content":"\r\n$('#example').dataTable( {\r\n  \"srollY\": \"200px\"\r\n} );\r\n\r\n// Some time later, recreate with just filtering (no scrolling)\r\n$('#example').dataTable( {\r\n  \"filter\": false,\r\n  \"destroy\": true\r\n} );\r\n","title":"Destroy an exisiting table and create a new one"},"since":"1.10","type":{"type":"boolean"},"group":"option","related":[{"content":"retrieve","type":"init"},{"content":"destroy","type":"api"},{"content":"ajax.reload()","type":"api"},{"content":"destroy","type":"event"}]}}
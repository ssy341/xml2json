{"dt-api":{"summary":"Get the table state that was loaded during initialisation.","description":"This method is primarily made available for plug-in authors who wish to get the state of a DataTable when it is initialised to restore state saved functionality of their own plug-in.\r\n\r\n\t\tThe structure of the object returned by this method matches the state object, as defined by `dt-api state()`.","name":"state.loaded()","example":{"content":"\r\n\r\n$(document).on( 'init.dt', function ( e, settings ) {\r\n\tvar api = new $.fn.dataTable.Api( settings );\r\n\tvar state = api.state.loaded();\r\n\r\n\t// ... use `state` to restore information\r\n} );\r\n\r\n","title":"Listen for DataTables initialisation and get the state"},"since":"1.10.1","type":{"description":"Get the table state that was loaded during initialisation","returns":{"content":"State saved object. See `dt-api state()` for the object format.","type":"object"},"type":"function","signature":"state.loaded()"},"group":"core","related":[{"content":"state()","type":"api"},{"content":"state.clear()","type":"api"},{"content":"state.save()","type":"api"},{"content":"stateSave","type":"option"},{"content":"stateSaveCallback","type":"option"},{"content":"stateLoadCallback","type":"option"},{"content":"stateLoadParams","type":"option"},{"content":"stateSaveParams","type":"option"},{"content":"stateLoaded","type":"option"},{"content":"stateLoaded","type":"event"},{"content":"stateLoadParams","type":"event"},{"content":"stateSaveParams","type":"event"}]}}
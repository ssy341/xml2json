{"dt-api":{"summary":"Perform a jQuery selection action on the full table.","description":"DataTables makes heavy use of DOM manipulation, removing rows from the document for paging and searching, and removing columns from the document for column visibility, among other actions. jQuery will not find these removed DOM elements when using a standard jQuery statement since it uses the document as the root element and some nodes under DataTables' control have been removed from the document.\r\n\r\n\t\tTo provide an easy method to continue using jQuery on these elements, so you can select elements regardless of searching, paging or any other feature of DataTables this method is provided.\r\n\r\n\t\tThe selector given to the `dt-api $()` method will be run on all of the `dt-tag tr` elements in the table, and their descendent elements, with the found elements being returned as a jQuery object.","name":"$()","example":{"content":"\r\nvar table = $('#example').DataTable();\r\n\r\ntable\r\n\t.$(':contains(\"High\")')\r\n\t.addClass('important');\r\n","title":"Find all cells with content's 'High' and add a class"},"since":"1.10","type":{"parameter":[{"content":"[jQuery selector](http://api.jquery.com/jQuery/#jQuery1) to perform on the nodes inside the table's tbody tag.","name":"selector","type":"node|jQuery|string"},{"content":"Option used to specify how the content's of the selected columns should be ordered, and if paging or filtering in the table should be taken into account. This is only useful for operations which involve rows, such as `dt-api column().nodes()` and `dt-api column().data()`.","default":"","name":"modifier","type":"selector-modifier"}],"description":"Perform a jQuery selector on the rows and contents of the rows in the tables' `dt-tag tbody` elements.","returns":{"content":"jQuery object with the matched elements in its result set.","type":"jQuery"},"type":"function","signature":"$( selector [, modifier ] )"},"group":"core"}}
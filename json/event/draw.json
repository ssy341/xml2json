{"dt-event":{"summary":"Draw event - fired once the table has completed a draw.","description":"It can be useful to take an action on every draw event of the table - for example you might want to update an external control with the newly displayed data, or  with server-side processing is enabled you might want to assign events to the newly created elements. This event is available to give exactly this information.\r\n\r\n\t\tThe `dt-event draw` event is fired whenever the table is redrawn on the page, at the same point as `dt-init drawCallback` (technically the callback fires before the event, but they occur sequentially and thus either can be used to achieve the same effect).\r\n\r\n\t\tPlease note that, as with all DataTables emitted events, this event is triggered with the `dt` namespace. As such, to listen for this event, you must also use the `dt` namespace by simply appending `.dt` to your event name, as shown in the example below.","name":"draw","example":{"content":"\r\n$('#example').dataTable();\r\n\r\n$('#example').on( 'draw.dt', function () {\r\n\tconsole.log( 'Redraw occurred at: '+new Date().getTime() );\r\n} );\r\n","title":"Log to console on each draw"},"since":"1.10","type":{"scope":"HTML table element","parameter":[{"content":"jQuery event object","name":"e","type":"object"},{"content":"DataTables settings object","name":"settings","type":"DataTables.Settings"}],"type":"function","signature":"function( e, settings )"},"related":[{"content":"drawCallback","type":"option"},{"content":"draw()","type":"api"}]}}
{"dt-api":{"summary":"Table events listener.","description":"DataTables can trigger a number of events which can be useful for taking action when DataTables performs those events. For example, it is often useful to know when an Ajax event occurs (`dt-event xhr`), so you can add additional data to the JSON payload.\r\n\r\n\t\tDataTables provides three methods for working with DataTables events, matching the core jQuery event methods:\r\n\r\n\t\t* `dt-api on()` - Listen for events\r\n\t\t* `dt-api off()` - Stop listening for events\r\n\t\t* `dt-api one()` - Listen for a single event.\r\n\r\n\t\tThis `dt-api on()` method is used to start listening for DataTables events. Simply pass in the event you wish to listen for an provide a callback function which will be activated when the event is triggered by DataTables.","name":"on()","example":{"content":"\r\nvar table = $('#example').DataTable( {\r\n\tajax: \"/data.json\"\r\n} );\r\n\r\ntable.on( 'xhr', function ( e, settings, json ) {\r\n\tconsole.log( 'Ajax event occurred. Returned data: ', json );\r\n} );\r\n","title":"Log a console message on each `dt-event xhr` event"},"since":"1.10","type":{"parameter":[{"content":"Event to listen for. Multiple events can be listened for using a space separator and events can be namespaced, just like with `jQuery().on()`.","name":"event","type":"string"},{"content":"Event callback handler. For the argument list passed in, please refer to the documentation for the event that you are using.","name":"callback","type":"function"}],"description":"Listen for events from tables and fire a callback when they occur","returns":{"content":"DataTables API instance","type":"DataTables.Api"},"type":"function","signature":"on( event, callback )"},"group":"core","related":[{"content":"off()","type":"api"},{"content":"one()","type":"api"}]}}
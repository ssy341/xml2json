{"dt-option":{"summary":"Define multiple column ordering as the default order for a column","default":"Takes the index value of the column automatically","description":"Allows a column's sorting to take multiple columns into account when doing a order.\r\n\r\n\t\tFor example with first name / last name columns next to each other, it is intuitive that they would be linked together to multi-column sort.","name":"columns.orderData","example":[{"content":"\r\n$('#example').dataTable( {\r\n  \"columnDefs\": [\r\n    { \"orderData\": [ 0, 1 ],    \"targets\": 0 },\r\n    { \"orderData\": 0,           \"targets\": 1 },\r\n    { \"orderData\": [ 2, 3, 4 ], \"targets\": 2 }\r\n  ]\r\n} );\r\n","title":"Using `orderData` to define multi-column sorting with `dt-init columnDefs`"},{"content":"\r\n$('#example').dataTable( {\r\n  \"columns\": [\r\n    { \"orderData\": [ 0, 1 ] },\r\n    { \"orderData\": 0, },\r\n    { \"orderData\": [ 2, 3, 4 ] },\r\n    null,\r\n    null\r\n  ]\r\n} );\r\n","title":"Using `orderData` to define multi-column sorting with `dt-init columns`"}],"since":"1.10","type":[{"description":"A single column index to order upon","type":"integer"},{"description":"Multiple column indexes to define multi-column sorting","type":"array"}],"group":"columns","related":[{"content":"ordering","type":"option"},{"content":"order","type":"option"},{"content":"order()","type":"api"},{"content":"column().order()","type":"api"},{"content":"columns().order()","type":"api"}]}}
{"dt-api":{"summary":"Get the data source property for the selected columns.","description":"DataTables has the ability to read data from a variety of complex data sources through use of the `dt-init columns.data` option. This method provides the ability to retrieve that setting for multiple columns after initialisation based on a column selector (see `dt-type column-selector`).\r\n\r\n\t\tThe value of `dt-init columns.data` that was set during initialisation (including the default of a column index integer) will be returned by this method, including functions (unevaluated). It is important to note that how `dt-init columns.render` is set has no effect on the return value of this method, which is used only for retrieving the value of `dt-init columns.data`.\r\n\r\n\t\tGenerally the singular representation of this method, `dt-api column().dataSrc()`, is likely to be more useful for authors. This method is included for completeness in the API.","name":"columns().dataSrc()","example":{"content":"\r\nvar table = $('#example').DataTable();\r\n\r\nalert( 'Data source: '+table.columns( [0, 1] ).dataSrc().join(' ') );\r\n","title":"Get the data source for columns 0 and 1"},"since":"1.10.3","type":{"description":"Get the data source property for the selected columns","returns":{"content":"API instance with the result set containing the data source parameters for the selected columns as configured by `dt-init columns.data`","type":"DataTables.Api"},"type":"function","signature":"columns().dataSrc()"},"group":"columns","related":[{"content":"columns().data()","type":"api"},{"content":"column().data()","type":"api"},{"content":"column().dataSrc()","type":"api"}]}}
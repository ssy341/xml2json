{"dt-api":{"summary":"Get the latest JSON data obtained from the last Ajax request DataTables made","description":"It can often be useful to be able to read the JSON response from a DataTables request to the server for data to summarise data, or obtain data that was also returned in the response but isn't directly used by the DataTable (this is a good technique to use where otherwise multiple Ajax requests would be needed, to help improve performance). This method is provided to give access to that data.\r\n\r\n\t\tNote that if the API instance references multiple DataTable instances, only the JSON data from the first table in the selection will be returned. Use the `dt-api table()` method to obtain an API instance for a specific DataTable is you are working with multiple tables.\r\n\r\n\t\tFurthermore, if the `dt-init ajax` option is given as a function, this method will return `undefined` rather than the JSON string, since the given function effectively overwrites DataTables own Ajax handler.","name":"ajax.json()","example":{"content":"\r\nvar table = $('#example').DataTable( {\r\n\tajax: \"data.json\"\r\n} );\r\n\r\ntable.on( 'xhr', function () {\r\n\tvar json = table.ajax.json();\r\n\talert( json.data.length +' row(s) were loaded' );\r\n} );\r\n","title":"Show an indiciation of how many rows are loaded"},"since":"1.10","type":{"returns":{"content":"Last Ajax data loaded from the server","type":"object"},"type":"function","signature":"ajax.json()"},"group":"core","related":[{"content":"ajax","type":"option"},{"content":"ajax.json()","type":"api"},{"content":"ajax.params()","type":"api"},{"content":"ajax.url()","type":"api"},{"content":"ajax.url().load()","type":"api"},{"content":"ajax.reload()","type":"api"},{"content":"xhr","type":"event"}]}}
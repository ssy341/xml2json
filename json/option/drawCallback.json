{"dt-option":{"summary":"Function that is called every time DataTables performs a draw.","description":"It can be useful to take an action on every draw event of the table - for example you might want to update an external control with the newly displayed data, or  with server-side processing is enabled you might want to assign events to the newly created elements. This callback is designed for exactly that purpose and will execute on every draw.","name":"drawCallback","example":[{"content":"\r\n$('#example').dataTable( {\r\n\t\"drawCallback\": function( settings ) {\r\n\t\talert( 'DataTables has redrawn the table' );\r\n\t}\r\n} );\r\n","title":"Notify whenever DataTables does a draw"},{"content":"\r\n$('#example').dataTable( {\r\n\t\"drawCallback\": function( settings ) {\r\n\t\tvar api = this.api();\r\n\r\n\t\t// Output the data for the visible rows to the browser's console\r\n\t\tconsole.log( api.rows( {page:'current'} ).data() );\r\n\t}\r\n} );\r\n","title":"Use API method in the callback to get the data for the rows in the draw"}],"since":"1.10","type":{"scope":"HTML table element","parameter":{"content":"DataTables settings object","name":"settings","type":"DataTables.Settings"},"type":"function","signature":"drawCallback( settings )"},"group":"callback","related":[{"content":"draw()","type":"api"},{"content":"draw","type":"event"}]}}
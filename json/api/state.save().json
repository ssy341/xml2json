{"dt-api":{"summary":"Trigger a state save.","description":"This method is primarily made available for plug-in authors who wish to be able to add information to the DataTables state saving object (through `dt-event stateSaveParams`) and want to be able to trigger a save save to save information specific to their plug-in.\r\n\r\n\t\tAs an example, a column filter plug-in might trigger a state save when the input values for the filter are altered by the end user. This enables the author to reliably restore the state of their plug-in when the table is next initialised (`dt-api state.loaded()`).","name":"state.save()","example":{"content":"\r\n\r\ntable.page('next');\r\ntable.state.save();\r\n\r\n","title":"Jump to the next page and save state (the `page()` method does not trigger a state save itself)"},"since":"1.10.1","type":{"description":"Trigger a state save","returns":{"content":"The API instance that was used, available for chaining.","type":"DataTables.Api"},"type":"function","signature":"state.save()"},"group":"core","related":[{"content":"state()","type":"api"},{"content":"state.clear()","type":"api"},{"content":"state.loaded()","type":"api"},{"content":"stateSave","type":"option"},{"content":"stateSaveCallback","type":"option"},{"content":"stateLoadCallback","type":"option"},{"content":"stateLoadParams","type":"option"},{"content":"stateSaveParams","type":"option"},{"content":"stateLoaded","type":"option"},{"content":"stateLoaded","type":"event"},{"content":"stateLoadParams","type":"event"},{"content":"stateSaveParams","type":"event"}]}}
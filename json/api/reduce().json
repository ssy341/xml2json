{"dt-api":{"summary":"Apply a callback function against and accumulator and each element in the Api's result set (left-to-right).","description":"This method can be used to accumulate data from a result set into a single value. A good example is summing the values from a column of data. A more complete definition of the Array reduce method, which this method is based upon, can be found on the [Mozilla MDN documentation for `reduce`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).\r\n\r\n\t\tNote that the traversal of the elements in the result set in this method is left-to-right (i.e. 0 to `length`). `dt-api reduceRight()` is available for transversal in the opposite direction.\r\n\r\n\t\tThis method makes use of the fact that DataTables API objects are \"array like\", in that they inherent a lot of the abilities and methods of the Javascript `Array` type.\r\n\r\n\t\tIn this case, this method is a proxy for the Javascript `Array.prototype.reduce` method and is provided as a utility method for the DataTables API. For more information about the original method, please refer to the [Mozilla MDN documentation for `reduce`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce). In browsers which do not support `reduce` natively, a polyfill is provided to allow this DataTables method to operate as expected.","name":"reduce()","example":{"content":"\r\nvar table = $('#example').DataTable();\r\n\r\nvar sum = table\r\n\t.column( 0 )\r\n\t.data()\r\n\t.reduce( function ( a, b ) {\r\n\t\treturn a + b;\r\n\t} );\r\n\r\n","title":"Sum the data in a column"},"since":"1.10","type":{"parameter":[{"content":"Callback function which is called for each item in the API instance result set. The callback is called with four parameters:\r\n\r\n\t\t\t* Current accumulator value, or `initialValue` if supplied in the first callback\r\n\t\t\t* Current element value\r\n\t\t\t* The element index in the result set\r\n\t\t\t* The API instance being traversed\r\n\r\n\t\t\tThe callback should return the value to be used as the accumulator for the next loop (first parameter in the callback).","name":"fn","type":"function"},{"content":"Value to use as the first argument of the first call to the `fn` callback.","default":"","name":"initialValue","type":"*"}],"description":"Apply a callback function against and accumulator and each element in the Api's result set.","returns":{"content":"Result from the final call to the `fn` callback function.","type":"*"},"type":"function","signature":"reduce( fn [, initialValue ] )"},"group":"utility"}}
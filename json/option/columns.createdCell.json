{"dt-option":{"summary":"Cell created callback to allow DOM manipulation","description":"This is a callback function that is executed whenever a cell is created (Ajax source, etc) or read from a DOM source. It can be used as a complement to `dt-init columns.render` allowing modification of the cell's DOM element (add background colour for example) when the element is created (cells may not be immediately created on table initialisation if `dt-init deferRender` is enabled, or if rows are dynamically added using the API (`dt-api rows.add()`).\r\n\r\n\t\tThis is the counterpart callback for rows, which use the `dt-init createdRow` option.","name":"columns.createdCell","example":{"content":"\r\n$('#example').dataTable( {\r\n  \"columnDefs\": [ {\r\n    \"targets\": 3,\r\n    \"createdCell\": function (td, cellData, rowData, row, col) {\r\n      if ( cellData < 1 ) {\r\n        $(td).css('color', 'red')\r\n      }\r\n    }\r\n  } ]\r\n} );\r\n","title":"Using `createdCell` manipulate the DOM with `dt-init columnDefs`"},"since":"1.10","type":{"scope":"HTML table element","parameter":[{"content":"The `tag TD` node that has been created","name":"cell","type":"node"},{"content":"Cell data. If you use `dt-init columns.render` to modify the data, use `$(cell).html()` to get and modify the rendered data. The information given here is the original and unmodified data from the data source.","name":"cellData","type":"*"},{"content":"Data source object / array for the whole row","name":"rowData","type":"*"},{"content":"DataTables' internal index for the row","name":"rowIndex","type":"integer"},{"content":"DataTables' internal index for the column","name":"colIndex","type":"integer"}],"type":"function","signature":"createdCell( cell, cellData, rowData, rowIndex, colIndex )"},"group":"columns","related":[{"content":"createdRow","type":"option"},{"content":"deferRender","type":"option"}]}}
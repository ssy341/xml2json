{"dt-option":{"summary":"State loaded callback.","description":"Callback that is fired once the state has been loaded (`dt-init stateLoadCallback`) and the saved data manipulated (if required - `dt-init stateLoadParams`).\r\n\r\n\t\tThis callback is useful if you simply wish to know information from the saved state, without getting into the inner workings of where and how the state information has been saved. For example it can be useful for populating custom filter inputs.","name":"stateLoaded","example":{"content":"\r\n$('#example').dataTable( {\r\n  \"stateSave\": true,\r\n  \"stateLoaded\": function (settings, data) {\r\n    alert( 'Saved filter was: '+data.search.search );\r\n  }\r\n} );\r\n","title":"Display the saved global filter"},"since":"1.10","type":{"scope":"HTML table element","parameter":[{"content":"DataTables settings object","name":"settings","type":"DataTables.Settings"},{"content":"Data to save. The data comes from `dt-init stateSaveParams`","name":"data","type":"object"}],"type":"function","signature":"stateLoaded( settings, data )"},"group":"callback","related":[{"content":"state()","type":"api"},{"content":"state.clear()","type":"api"},{"content":"state.loaded()","type":"api"},{"content":"state.save()","type":"api"},{"content":"stateSave","type":"option"},{"content":"stateSaveCallback","type":"option"},{"content":"stateLoadParams","type":"option"},{"content":"stateLoaded","type":"option"},{"content":"stateSaveParams","type":"option"},{"content":"stateLoadCallback","type":"option"},{"content":"stateLoadParams","type":"event"},{"content":"stateSaveParams","type":"event"}]}}
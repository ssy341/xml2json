{"dt-api":{"summary":"Get the data source property for the selected column.","description":"DataTables has the ability to read data from a variety of complex data sources through use of the `dt-init columns.data` option. This method provides the ability to retrieve that setting after initialisation based on a column selector (see `dt-type column-selector`).\r\n\r\n\t\tThe value of `dt-init columns.data` that was set during initialisation (including the default of a column index integer) will be returned by this method, including functions (unevaluated). It is important to note that how `dt-init columns.render` is set has no effect on the return value of this method, which is used only for retrieving the value of `dt-init columns.data`.\r\n\r\n\t\tIt is not possible at this time to use this method as a setter - the data source for a column cannot be changed after initialisation.","name":"column().dataSrc()","example":{"content":"\r\nvar table = $('#example').DataTable();\r\n\r\n$('#example').on( 'click', 'tbody td', function () {\r\n\tvar idx = table.cell(this).index().column;\r\n\talert( 'Data source: '+table.column( idx ).dataSrc() );\r\n} );\r\n","title":"Get the data source for a column that was clicked on"},"since":"1.10.3","type":{"description":"Get the data source property for the selected column","returns":{"content":"Data source parameter as configured by `dt-init columns.data`","type":"integer|string|function"},"type":"function","signature":"column().dataSrc()"},"group":"columns","related":[{"content":"columns().data()","type":"api"},{"content":"columns().dataSrc()","type":"api"},{"content":"column().data()","type":"api"}]}}
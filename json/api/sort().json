{"dt-api":{"summary":"Sort the elements of the API instance's result set.","description":"The `dt-api sort()` method provides a way of sorted the data in an API instance's result set, which can be particularly useful if you then want to use that data for displaying to the end user - for example as a `dt-tag select` list for a search input. This method should not be confused with `dt-api order()` which is used to order for records in the DataTable.\r\n\r\n\t\tThis method makes use of the fact that DataTables API objects are \"array like\", in that they inherent a lot of the abilities and methods of the Javascript `Array` type.\r\n\r\n\t\tIn this case, this method is a proxy for the Javascript `Array.prototype.sort` method and is provided as a utility method for the DataTables API. For more information about the original method, please refer to the [Mozilla MDN documentation for `sort`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort).","name":"sort()","example":{"content":"\r\nvar table = $('#example').DataTable();\r\n\r\nvar data = table\r\n\t.column( 0 )\r\n\t.data()\r\n\t.sort();\r\n\r\n","title":"Sort the data from a column"},"since":"1.10","type":{"parameter":{"content":"This is a standard Javascript sort comparison function. It accepts two parameters:\r\n\r\n\t\t\t* Value 1 to compare\r\n\t\t\t* Value 2 to compare\r\n\r\n\t\t\tAnd expects a return which indicated the sorted position of the two values. Less that 0 indicates that the first value comes before the second, greater than 0 indicates that the first value comes after the second and a return of 0 indicates that they are identical.","default":"","name":"fn","type":"function"},"description":"Sort the elements of the API instance's result set.","returns":{"content":"The original API instance with the result set sorted as defined by the sorting conditions used.","type":"DataTables.Api"},"type":"function","signature":"sort( [ fn ] )"},"group":"utility"}}
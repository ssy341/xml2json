{"dt-option":{"summary":"Initial order (sort) to apply to the table","default":{"value":"[[0, 'asc']]"},"description":"If ordering is enabled (`dt-init ordering`), then DataTables will perform a first pass order during initialisation. Using this parameter you can define which column(s) the order is performed upon, and the ordering direction. The `dt-init order` must be an array of arrays, each inner array comprised of two elements:\r\n\r\n\t\t* Column index to order upon\r\n\t\t* Direction so order to apply (`-string asc` for ascending order or `-string desc` for descending order).\r\n\r\n\t\tThis 2D array structure allows a multi-column order to be defined as the initial state should it be required.","name":"order","example":[{"content":"\r\n$('#example').dataTable( {\r\n\t\"order\": []\r\n} );\r\n","title":"No ordering applied by DataTables during initialisation. The rows are shown in the order they are read by DataTables (i.e. the original order from the DOM if DOM sourced, or the array of data if Ajax / data sourced)"},{"content":"\r\n$('#example').dataTable( {\r\n\t\"order\": [[ 0, 'asc' ], [ 1, 'asc' ]]\r\n} );\r\n","title":"Multi-column ordering as the initial state"}],"since":"1.10","type":{"type":"array"},"group":"option","related":[{"content":"ordering","type":"option"},{"content":"orderFixed","type":"option"},{"content":"columns.orderable","type":"option"},{"content":"columns.orderData","type":"option"},{"content":"columns.orderSequence","type":"option"},{"content":"order()","type":"api"}]}}
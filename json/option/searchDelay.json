{"dt-option":{"summary":"Set a throttle frequency for searching","default":{"content":"When given as `null` DataTables will automatically assign a value that is suitable for the processing mode that the DataTable is operating in:\r\n\r\n\t\t* Instant - client-side processing\r\n\t\t* 400mS - server-side processing","value":null},"description":"The built in DataTables global search (by default at the top right of every DataTable)will instantly search the table on every keypress when in client-side processing mode and reduce the search call frequency automatically to 400mS when in server-side processing mode. This call frequency (throttling) can be controlled using the `dt-init searchDelay` parameter for both client-side and server-side processing.\r\n\r\n\t\tBeing able to control the call frequency has a number of uses:\r\n\r\n\t\t* Older browsers and slower computers can have their processing load reduced by reducing the search frequency\r\n\t\t* Fewer table redraws while search can be less distracting for the user\r\n\t\t* Reduce the load on the server when using server-side processing by making fewer calls\r\n\t\t* Conversely, you can speed up the search when using server-side processing by reducing the default of 400mS to instant (`0`).\r\n\r\n\t\tAs with many other parts of DataTables, it is up to yourself how you configure it to suit your needs!\r\n\r\n\t\tThe value given for `dt-init searchDelay` is in milliseconds (mS).\r\n\r\n\t\tPlease note that this option effects only the built in global search box that DataTables provides. It does not effect the `dt-api search()` or `dt-api column().search()` methods at all. If you wish to be able to throttle calls to those API methods use the utility method `dt-api $.fn.dataTable.util.throttle()`.","name":"searchDelay","example":{"content":"\r\n$('#example').DataTable( {\r\n  searchDelay: 350\r\n} );\r\n","title":"Set a 350mS throttle for searching"},"since":"1.10.3","type":{"type":"integer"},"group":"option","related":{"content":"search","type":"option"}}}